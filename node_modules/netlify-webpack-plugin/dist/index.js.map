{"version":3,"file":"index.js","sources":["../src/csp.ts","../src/headers.ts","../src/redirects.ts","../src/plugin.ts"],"sourcesContent":["import { HeaderValue } from './headers';\n\nexport const csp = (cspPolicy: Record<string, string[]>): HeaderValue => {\n  const [firstPolicy, ...morePolicies] = Object.keys(cspPolicy).map(\n    (directive) => `${directive} ${cspPolicy[directive].join(' ')}`\n  );\n  if (morePolicies.length > 0) {\n    return [firstPolicy, morePolicies];\n  }\n  return firstPolicy;\n};\n","type SimpleHeaderValue = string | number;\ntype ParameterizedHeaderValue = [\n  SimpleHeaderValue,\n  { [token: string]: SimpleHeaderValue | boolean } | SimpleHeaderValue[]\n];\ntype SingleValueHeader = ParameterizedHeaderValue | SimpleHeaderValue;\ntype MultiValueHeader = SingleValueHeader[] | { [key: string]: SingleValueHeader | boolean };\n\n/**\n * Headers can be either single or multi-valued.\n * For single valued headers the value can be a string or number, or\n * it can be an array with the first argument being a string or number, the value of the header\n * and the second argument being an object or array containing the tokens with their values.\n * For the tokens if the value is a boolean is token is name is included if the value is true,\n * otherwise the value is [tokenName]=[tokenValue]; . If tokens is an array tokens are included as [token];\n * For Multi-valued headers the value should be an array of the single valued headers, or an object\n * in the case of an object if the value for a key is a boolean than the header value\n * will be included conditionally. Otherwise the value will be:\n * [key]=[value according to single value spec]\n */\nexport type HeaderValue = MultiValueHeader | SingleValueHeader;\n\nfunction isSimpleHeaderValue(value: HeaderValue): value is SimpleHeaderValue {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    value instanceof String ||\n    value instanceof Number\n  );\n}\n\nfunction isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean' || value instanceof Boolean;\n}\n\nfunction isParameterizedHeaderValue(value: HeaderValue): value is ParameterizedHeaderValue {\n  if (Array.isArray(value) && value.length === 2) {\n    const [parameterValue, tokens] = value;\n    if (isSimpleHeaderValue(parameterValue) && tokens !== null && typeof tokens === 'object') {\n      if (Array.isArray(tokens)) {\n        return tokens.every((v) => isSimpleHeaderValue(v));\n      }\n      return Object.values(tokens).every((v) => isBoolean(v) || isSimpleHeaderValue(v));\n    }\n  }\n  return false;\n}\n\nfunction writeParameterizedHeaderValue(value: ParameterizedHeaderValue): string {\n  const tokenStrings = Array.isArray(value[1])\n    ? value[1].map((v) => `${v}`)\n    : Object.entries(value[1])\n        .map(([key, v]) => {\n          if (isBoolean(v)) {\n            return v ? key : null;\n          }\n          return `${key}=${v}`;\n        })\n        .filter((v) => v != null);\n  return `${value[0]}${tokenStrings.length > 0 ? `; ${tokenStrings.join('; ')}` : ''}`;\n}\n\nfunction isSingleValueHeader(value: HeaderValue): value is SingleValueHeader {\n  return isParameterizedHeaderValue(value) || isSimpleHeaderValue(value);\n}\n\nfunction writeSingleValueHeader(header: string, value: SingleValueHeader): string {\n  const headerValue = isSimpleHeaderValue(value)\n    ? `${value}`\n    : writeParameterizedHeaderValue(value);\n  return `  ${header}: ${headerValue}`;\n}\n\nfunction isMultiValueHeader(value: HeaderValue): value is MultiValueHeader {\n  if (value != null && typeof value === 'object') {\n    if (Array.isArray(value)) {\n      return (\n        !isParameterizedHeaderValue(value) &&\n        value.every((v: HeaderValue) => isSingleValueHeader(v))\n      );\n    } else {\n      return Object.values(value).every((v) => isBoolean(v) || isSingleValueHeader(v));\n    }\n  }\n  return false;\n}\n\nfunction writeMultiValueHeader(header: string, value: MultiValueHeader): string[] {\n  return Array.isArray(value)\n    ? value.map((v) => writeSingleValueHeader(header, v))\n    : Object.keys(value)\n        .map((key) => {\n          const v = value[key];\n          if (isBoolean(v)) {\n            return v ? key : null;\n          }\n          return `${key}=${isSimpleHeaderValue(v) ? v : writeParameterizedHeaderValue(v)}`;\n        })\n        .filter((v): v is string => v != null)\n        .map((v) => writeSingleValueHeader(header, v));\n}\n\nfunction writeHeaders(header: string, value: HeaderValue): string[] {\n  if (value != null) {\n    if (isSingleValueHeader(value)) {\n      return [writeSingleValueHeader(header, value)];\n    } else if (isMultiValueHeader(value)) {\n      return writeMultiValueHeader(header, value);\n    }\n  }\n  return [];\n}\n\nexport type Headers = { [path: string]: Header };\nexport type Header = { [header: string]: HeaderValue };\n\nexport const createHeaderFile = (headers: Headers): string =>\n  Object.keys(headers)\n    .map((path) => {\n      const headerValues = Object.keys(headers[path])\n        .map((header) => writeHeaders(header, headers[path][header]))\n        .reduce((acc, next) => {\n          acc.push(...next);\n          return acc;\n        }, []);\n      if (headerValues) {\n        return [`${path}`, ...headerValues];\n      }\n      return [];\n    })\n    .reduce((acc, next) => {\n      acc.push(...next);\n      return acc;\n    }, [])\n    .join('\\n');\n","import { ISO3166 } from './iso-3166';\nimport { LanguageCodes } from './language-codes';\n\nexport interface Conditions {\n  /**\n   * Matches browsers requested language\n   */\n  readonly language?: LanguageCodes[];\n  /**\n   * Matches browsers advertized country\n   */\n  readonly country?: ISO3166[];\n  /**\n   * Matches users logged in roles\n   */\n  readonly role?: string[];\n}\n\nexport interface Redirect {\n  /**\n   * URL from which to redirect\n   */\n  readonly from: string;\n  /**\n   * URL to redirect to\n   */\n  readonly to: string;\n  /**\n   * status number for the redirect\n   * status 200 is a proxy\n   */\n  readonly status?: number;\n  /**\n   * if true force the redirect even if\n   * the value is present\n   */\n  readonly force?: boolean;\n  /**\n   * Query strings to match, and capture\n   */\n  readonly query?: Record<string, string>;\n  /**\n   * Conditions to check for\n   */\n  readonly conditions?: Conditions;\n}\n\nfunction writeConditions(conditions?: Conditions): string[] {\n  if (conditions) {\n    return Object.keys(conditions)\n      .map((k) => {\n        const key = k as keyof Conditions;\n        if (conditions[key] && conditions[key]!.length > 0) {\n          const capitalized = `${key[0].toUpperCase()}${key.substr(1)}`;\n          return `${capitalized}=${conditions[key]!.join(',')}`;\n        }\n        return null;\n      })\n      .filter((v): v is string => v != null);\n  }\n  return [];\n}\n\nfunction writeQueryParams(query?: Record<string, string>): string[] {\n  if (query) {\n    return Object.keys(query).map((param) => `${param}=${query[param]}`);\n  }\n  return [];\n}\n\nexport const createRedirectFile = (patterns: Redirect[]): string =>\n  patterns\n    .map(({ from, query, to, status = 301, force, conditions }) =>\n      [\n        from,\n        ...writeQueryParams(query),\n        to,\n        `${status}${force ? '!' : ''}`,\n        ...writeConditions(conditions)\n      ].join('    ')\n    )\n    .join('\\n');\n","import { compilation as webpackCompilation, Compiler } from 'webpack';\nimport { createHeaderFile, Headers } from './headers';\nimport { createRedirectFile, Redirect } from './redirects';\n\nexport interface NetlifyPluginConfiguration {\n  /**\n   * The Netlify Headers to Generate\n   */\n  readonly headers?: Headers;\n  /**\n   * The Redirect Rules to generate\n   */\n  readonly redirects?: Redirect[];\n}\n\nfunction tapEmit(\n  compiler: Compiler\n): (name: string, syncHook: (compilation: webpackCompilation.Compilation) => void) => void {\n  if ('hooks' in compiler) {\n    return (name: string, syncHook: (compilation: webpackCompilation.Compilation) => void) =>\n      compiler.hooks.emit.tap(name, syncHook);\n  } else {\n    // use the the legacy api if that's what is provided.\n    return (_: string, syncHook: (compilation: webpackCompilation.Compilation) => void) => {\n      (compiler as any).plugin(\n        'emit',\n        (compilation: webpackCompilation.Compilation, callback: () => void) => {\n          syncHook(compilation);\n          callback();\n        }\n      );\n    };\n  }\n}\n\n// Given a configuration writes it out as _headers and _redirects files\nexport class NetlifyPlugin {\n  private readonly configuration: NetlifyPluginConfiguration;\n\n  constructor(configuration: NetlifyPluginConfiguration) {\n    this.configuration = configuration;\n  }\n\n  public apply(compiler: Compiler): void {\n    tapEmit(compiler)('NetlifyPlugin', (compilation) => {\n      if (this.configuration.headers) {\n        const headersFile = createHeaderFile(this.configuration.headers);\n        compilation.assets._headers = {\n          source: () => headersFile,\n          size: () => headersFile.length\n        };\n      }\n      if (this.configuration.redirects) {\n        const redirects = createRedirectFile(this.configuration.redirects);\n        compilation.assets._redirects = {\n          source: () => redirects,\n          size: () => redirects.length\n        };\n      }\n    });\n  }\n}\n"],"names":["csp","cspPolicy","firstPolicy","morePolicies","Object","keys","map","directive","join","length","isSimpleHeaderValue","value","String","Number","isBoolean","Boolean","isParameterizedHeaderValue","Array","isArray","parameterValue","tokens","every","v","values","writeParameterizedHeaderValue","tokenStrings","entries","key","filter","isSingleValueHeader","writeSingleValueHeader","header","headerValue","isMultiValueHeader","writeMultiValueHeader","writeHeaders","createHeaderFile","headers","path","headerValues","reduce","acc","next","push","writeConditions","conditions","k","capitalized","toUpperCase","substr","writeQueryParams","query","param","createRedirectFile","patterns","from","to","status","force","tapEmit","compiler","name","syncHook","hooks","emit","tap","_","plugin","compilation","callback","NetlifyPlugin","constructor","configuration","apply","headersFile","assets","_headers","source","size","redirects","_redirects"],"mappings":"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"}